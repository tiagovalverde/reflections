What happens when you initialize a repository? Why do you need to do it?
	
	When I initialize a repository GIT will create the .git hidden file that
	will contian all metadate of the repository. From that point on, all the commits 
	made will be saved by GIT. I need to do it because its the only way to make GIT
	create a repository and recognize the commits made.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	The staging area allow us to define which files to be commited in one commit.
	It is useful in defining you first commits in a repository if you started a project 
	before creating the repository. If you apply a commit directly all the files from your wd will be uploaded to the repo.

How can you use the staging area to make sure you have one commit per logical
change?

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?